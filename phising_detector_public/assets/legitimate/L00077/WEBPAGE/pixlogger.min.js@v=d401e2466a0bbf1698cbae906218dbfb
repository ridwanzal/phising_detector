var pix=pix||{};pix.js_error_type=pix.js_error_type||"other";pix.js_logger=function(message){if("undefined"!==typeof pix.js_error_alert&&pix.js_error_alert){alert(message)}if("undefined"!==typeof console&&"undefined"!==typeof console.log){console.log(message)}(new Image).src="//error.pixplug.in/"+pix.js_error_type+".gif?message="+encodeURIComponent(message)+"&from="+encodeURIComponent(document.location)};pix.window_error=function(errorMessage,url,line){if("object"==typeof errorMessage){url=errorMessage.target.src;errorMessage=errorMessage.type;line=0}pix.js_logger("window.onerror: "+errorMessage+" "+url+" "+line)};if("undefined"!==typeof window.addEventListener){window.onerror=pix.window_error}else if("undefined"!==typeof window.attachEvent){window.attachEvent("error",pix.window_error)}jQuery(function(){jQuery("<div>").ajaxError(function(event,request,settings,exception){pix.js_logger("AjaxError:"+settings.type+" "+settings.url+" "+request.status+" ("+request.statusText+"):"+exception)})});jQuery.error=function(message){pix.js_logger("jQuery.error: "+message)};if(typeof console!="undefined"&&typeof console.error!="undefined"){console.error=function(){var argument_strings=[];for(var i=0;i<arguments.length;i++){argument_strings.push(" "+arguments[i])}pix.js_logger("console.error: "+argument_strings.join(" "))}}
